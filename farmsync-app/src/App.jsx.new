import React, { useState } from 'react';
import Sidebar from './components/layout/Sidebar';
import TopBar from './components/layout/TopBar';
import Dashboard from './components/pages/Dashboard';
import YieldsSales from './components/pages/YieldsSales';
import Financials from './components/pages/financial/Financials';
import WorkerManagement from './components/pages/workers/WorkerManagement';
import WorkerDetails from './components/pages/workers/WorkerDetails';
import Login from './components/auth/Login';
import Register from './components/auth/Register';

function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [currentPage, setCurrentPage] = useState('dashboard');
  const [selectedWorker, setSelectedWorker] = useState(null);
  const [showRegister, setShowRegister] = useState(false);

  if (!isAuthenticated) {
    if (showRegister) {
      return (
        <div className="min-h-screen bg-gray-100">
          <div className="container mx-auto py-8">
            <Register 
              onRegister={() => setIsAuthenticated(true)}
              onSwitchToLogin={() => setShowRegister(false)}
            />
          </div>
        </div>
      );
    }
    
    return (
      <div className="min-h-screen bg-gray-100">
        <div className="container mx-auto py-8">
          <Login 
            onLogin={() => setIsAuthenticated(true)}
            onSwitchToRegister={() => setShowRegister(true)}
          />
        </div>
      </div>
    );
  }

  return (
    <div className="flex h-screen bg-gray-100">
      <Sidebar 
        currentPage={currentPage} 
        onNavigate={setCurrentPage} 
        onLogout={() => setIsAuthenticated(false)} 
      />
      <div className="flex-1 flex flex-col overflow-hidden">
        <TopBar />
        <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-100">
          {currentPage === 'dashboard' && <Dashboard />}
          {currentPage === 'yields' && <YieldsSales />}
          {currentPage === 'financials' && <Financials />}
          {currentPage === 'workers' && (
            selectedWorker ? 
              <WorkerDetails 
                worker={selectedWorker} 
                onBack={() => setSelectedWorker(null)} 
              /> :
              <WorkerManagement 
                onSelectWorker={setSelectedWorker} 
              />
          )}
        </main>
      </div>
    </div>
  );
}

export default App;
